name: CI Workflow

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

env:
  CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

jobs:
  setup:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout code
      - name: Checkout code
        uses: actions/checkout@v2

      # Step 2: Read Node.js version from .nvmrc
      - name: Read Node.js version from .nvmrc
        id: nvmrc
        run: echo "NODE_VERSION=$(cat .nvmrc)" >> $GITHUB_ENV

      # Step 3: Set up Node.js using version from .nvmrc
      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: ${{ env.NODE_VERSION }}

  build:
    runs-on: ubuntu-latest
    needs: setup

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Install pnpm
        run: npm install -g pnpm

      - name: Install dependencies
        run: pnpm install

      - name: Build React app
        run: pnpm build # Assumes you have a build script in package.json

      - name: Lint Check
        run: pnpm lint # Assumes you have a lint script in package.json

  terraform:
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v2.0.0
        with:
          terraform_version: 1.5.0 # Specify your Terraform version here

      - name: Configure AWS Credentials
        run: |
          echo "AWS credentials configured."

      - name: Terraform Init
        working-directory: ./terraform
        run: terraform init

      - name: Terraform Validate
        working-directory: ./terraform
        run: terraform validate

      - name: Terraform Plan
        working-directory: ./terraform
        run: terraform plan

      - name: Terraform Apply
        working-directory: ./terraform
        run: terraform apply -auto-approve

      - name: Output Terraform State
        working-directory: ./terraform
        run: |
          terraform output -json > terraform_output.json
          echo "Terraform output saved to terraform_output.json"

  tests:
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Install pnpm
        run: npm install -g pnpm

      - name: Install dependencies
        run: pnpm install

      - name: Run tests with coverage
        run: pnpm test:ci

  codecov:
    runs-on: ubuntu-latest
    needs: [build, tests]

    steps:
      # Step 1: Upload coverage to Codecov
      - name: Upload coverage to Codecov
        run: pnpm exec codecov -f ./coverage/lcov.info
        env:
          CODECOV_TOKEN: ${{ env.CODECOV_TOKEN }}

  deploy:
    runs-on: ubuntu-latest
    needs: [build, tests]

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Install pnpm
        run: npm install -g pnpm

      - name: Install dependencies
        run: pnpm install

      - name: Deploy React build to AWS
        run: pnpm run deploy # Adjust according to your deployment script
